import tkinter as tk
import os
import subprocess

class AudioRecorderApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Voice Recorder")

        self.record_button = tk.Button(master, text="Record", command=self.start_recording)
        self.record_button.pack(pady=10)

        self.stop_button = tk.Button(master, text="Stop", command=self.stop_recording, state=tk.DISABLED)
        self.stop_button.pack(pady=5)

        self.save_button = tk.Button(master, text="Save Recording", command=self.save_recording, state=tk.DISABLED)
        self.save_button.pack(pady=5)

        self.is_recording = False
        self.process = None

    def start_recording(self):
        self.is_recording = True
        self.record_button.config(state=tk.DISABLED)
        self.stop_button.config(state=tk.NORMAL)
        self.save_button.config(state=tk.DISABLED)

        self.process = subprocess.Popen(["ffmpeg", "-f", "alsa", "-i", "default", "recording.wav"])

    def stop_recording(self):
        self.is_recording = False
        self.record_button.config(state=tk.NORMAL)
        self.stop_button.config(state=tk.DISABLED)
        self.save_button.config(state=tk.NORMAL)

        if self.process:
            self.process.terminate()
            self.process = None

    def save_recording(self):
        if os.path.exists("recording.wav"):
            new_file_name = tk.filedialog.asksaveasfilename(defaultextension=".wav", filetypes=[("WAV files", "*.wav")])
            if new_file_name:
                os.rename("recording.wav", new_file_name)

if __name__ == "__main__":
    root = tk.Tk()
    app = AudioRecorderApp(root)
    root.mainloop()
